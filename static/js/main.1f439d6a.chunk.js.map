{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Notification/Notification.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","styles","d","statistics__title","p","bar","scale","style","width","FeedbackOptions","options","btn","name","onClick","Notification","message","padding","Section","title","children","App","state","leaveFeedback","evt","target","setState","prevState","countTotalFeedback","Math","round","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f439d6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics__title\":\"Statistics_statistics__title__32nVj\",\"d\":\"Statistics_d__3yPR8\",\"bar\":\"Statistics_bar___VqJC\",\"scale\":\"Statistics_scale__xz7x_\",\"p\":\"Statistics_p__2dXH6\"};","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\"\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n    return (\r\n        <div className={styles.d}>\r\n            <h1 className={styles.statistics__title}> Statistics</h1>\r\n            <p className={styles.p}>Good</p>\r\n            <div className={styles.bar}>\r\n                <span className={styles.scale} style={{width: `${good}%`}}>{good}</span>\r\n            </div>\r\n            <p className={styles.p}>Neutral</p>\r\n            <div className={styles.bar}>\r\n                <span className={styles.scale} style={{width: `${neutral}%`}}>{neutral}</span>\r\n            </div>\r\n            <p className={styles.p}>Bad</p>\r\n            <div className={styles.bar}>\r\n                <span className={styles.scale} style={{width: `${bad}%`}}>{bad}</span>\r\n            </div>\r\n\r\n            <p className={styles.p}>Total</p>\r\n            <div className={styles.bar}>\r\n                <span className={styles.scale} style={{width: `${total}%`}}>{total}</span>\r\n            </div>\r\n            <p className={styles.p}> Positive feedback</p>\r\n                <div className={styles.bar}>\r\n                    <span className={styles.scale} style={{width: `${positivePercentage}%`}}>{positivePercentage}%</span>\r\n                </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nfunction FeedbackOptions({ options }) {\r\n    return (\r\n        <>\r\n            <button className={styles.btn} name=\"good\" onClick={options}>\r\n                Good\r\n            </button>\r\n            <button className={styles.btn} name=\"neutral\" onClick={options}>\r\n                Neutral\r\n            </button>\r\n            <button className={styles.btn} name=\"bad\" onClick={options}>\r\n                Bad\r\n            </button>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nlet Notification = ({message}) => {\r\n    const s = {\r\n        padding : 10\r\n      };\r\n\r\n    return (\r\n        <div >\r\n            <h2 style={s}>{message}</h2>\r\n        </div >\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    }\r\n\r\nexport default Notification;","import React from \"react\";\r\n\r\nfunction Section({ title, children }) {\r\n    const s={\r\n        padding:10\r\n    }\r\n    return (\r\n        <>\r\n            <h2 style = {s}>{title}</h2>\r\n            <div>{children}</div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Section;","\nimport React, { Component } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedBackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Notification from \"./components/Notification/Notification\";\nimport Section from \"./components/Section/Section\";\n\n\nclass App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n    };\n\n\n    leaveFeedback = evt => {\n        const name = evt.target.name;\n        this.setState((prevState) => ({ [name]: prevState[name] + 1 }));\n    };\n    countTotalFeedback = () => {\n        const total = this.state.good + this.state.neutral + this.state.bad;\n        return total;\n    }\n    positivePercentage = () => {\n\n        return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n\n    }\n\n    render() {\n        return (\n            <>\n                <Section title = \"Leave your feedback here\">\n                    <FeedBackOptions options={this.leaveFeedback}/>\n                    {this.countTotalFeedback() ? (\n                        <Statistics\n                            good={this.state.good}\n                            neutral={this.state.neutral}\n                            bad={this.state.bad}\n                            total={\n                                this.countTotalFeedback()}\n                            positivePercentage={this.positivePercentage()}\n                        />\n                    ) : (<Notification message=\"No feedback given\" />)\n                    }\n                </Section>\n\n            </>\n        )\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__100by\"};"],"sourceRoot":""}